if "${if_restart} == 1" then "log log.2 append"
if "${if_restart} == 0" then "log log.2"
units               real   
dimension           3   
processors          * * 2

### only two periodic boundaries
boundary            p p f
atom_style          full 
newton              on

##force field
pair_style          lj/cut/coul/long 12 12
angle_style         harmonic
bond_style          harmonic
dihedral_style      opls
improper_style      cvff
kspace_style        pppm/conp 1.0e-5
kspace_modify       slab 3.0
pair_modify         mix geometric  ## should be default anyway
##atom definition

if "${if_restart} == 0" then &
    "read_data         sample.data"

if "${if_restart} == 1" then &
    "read_restart         restart.*"

special_bonds lj/coul 0.0 0.0 0.5 ## for opls lopes kpl

##setting
# neighbor            2 bin

variable etype equal 1
group cdc type 1
group sol subtract all cdc

group allatom union cdc sol

group leftele molecule 3
group rightele molecule 1

group ele union leftele rightele

variable q atom q
compute qleft leftele reduce sum v_q
compute qright rightele reduce sum v_q
compute tempsl sol temp


##outputs
thermo              100
neigh_modify every 2 delay 0 check yes  
thermo_style custom step c_tempsl c_qleft c_qright # f_e
thermo_modify flush yes
#thermo_modify warn 5

if "${if_restart} == 0" then "shell echo 0 > nrestart"

# variable xtcstep equal step

variable nr file nrestart
# dump 7 all xtc 100 conp_${xtcstep}.xtc
dump 7 all xtc 1000 conp_${nr}.xtc
dump_modify 7 sort id
shell echo $(v_nr+1) > nrestart # increment for next run


dump 8 ele custom 1000 ele.lammpstrj id q
dump_modify 8 sort id
if "${if_restart} == 1" then &
    "dump_modify 8 append yes"

##run_style           verlet
timestep            2
velocity cdc set 0.0 0.0 0.0
# fix freezecdc cdc setforce 0.0 0.0 0.0
#minimize 1.0e-4 1.0e-6 100 1000

# fix constrainH all shake 0.0001 20 0 m 1.007947
if "${if_wat} == 0" then "fix constrainH all shake 0.0001 20 0 m 1.007947"
if "${if_wat} == 1" then "fix constrainH all shake 0.0001 20 0 m 1.007947 a 1"


timer timeout 72:00:00

fix 1 sol nvt temp ${temperature} ${temperature} $(100.0*dt)

variable restartInterval equal 50000
variable ccmEnd equal 100000
variable zeroPotentialStart equal ${ccmEnd}
variable zeroPotentialEnd equal 2000000
variable nonzeroPotentialStart equal ${zeroPotentialEnd}
variable nonzeroPotentialEnd equal 52000000

variable cstep1 equal step
if "${cstep1} < ${ccmEnd}" then &
    "restart ${restartInterval} restart" &
    "run ${ccmEnd} upto"

variable cstep2 equal step

if "(${cstep2} >= ${zeroPotentialStart}) && (${cstep2} < ${zeroPotentialEnd})" then &
    "fix cpm leftele conp 1 rightele 1.979 0 log_conp etypes 1 1 pppm" &
    "restart ${restartInterval} restart" &
    "run ${zeroPotentialEnd} upto" &
    "unfix cpm"

variable cstep3 equal step
if "${cstep3} >= ${nonzeroPotentialStart}" then &
    "fix cpm leftele conp 1 rightele 1.979 ${voltage} log_conp etypes 1 1 pppm" &
    "restart ${restartInterval} restart" &
    "run ${nonzeroPotentialEnd} upto" &
    "write_restart restart.final"